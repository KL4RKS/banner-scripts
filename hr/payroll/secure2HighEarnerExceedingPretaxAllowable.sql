/* 
***** PURPOSE *****
  Report to identify high-income employees with possible excess pre-tax contributions 
  This will accomodate two separate contribution buckets. (i.e. 401K/403B/TSP and 457B)
  The first bucket accomodates most retirement contributions which share a combined limit (401K/403B/TSP).
  The second bucket is for 457B contributions which have a limit separate from the other retirement plans.
  
  The first few CTEs provide a way to provide setup for the report.
    -- LIMITS_AND_WAGES - establish the prior year FICA threshold for high earner status and the normal contribution limits for each bucket by contribution year
    -- SPECIAL_CATCHUP - (optional) provide special catchup amounts for high earner employees age 50+
    -- PRET_MAIN - provide a list of pre-tax (TRADITIONAL) deduction codes for the first bucket (i.e. 401K/403B/TSP)
    -- POST_MAIN - provide a list of post-tax (ROTH) deduction codes for the first bucket (i.e. 401K/403B/TSP)
    -- PRET_457B - provide a list of pre-tax (TRADITIONAL) deduction codes for the second bucket (i.e. 457B)
    -- POST_457B - provide a list of post-tax (ROTH) deduction codes for the second bucket (i.e. 457B)
    -- HIGH_EARNERS_50_PLUS - identifies high earner employees who are age 50+

***** SETUP *****
  LIMITS_AND_WAGES CTE
    Update the contribution years, limits and wage thresholds as needed.
    Note, the prior year wage threshhold should be listed by contribution year record (not the year wages are earned)
    for example, for contribution year 2026, we list hte 2025 wage threshold of $145,000 on the 2026 record.
  SPECIAL_CATCHUP CTE
    (OPTIONAL) Add records for employees eligible for special catchup contributions if desired.
  PRET_MAIN, POST_MAIN, PRET_457B, POST_457B CTEs
    Update the deduction code lists as needed.
    -- MAIN is intended for 401K/403B/TSP or plans whose limits are determined by IRS section 402(g)
    -- 457B is intended for 457B plans which have a limit separate from other retirement plans determined by IRS section 457(b)(2)

***** PARAMETERS *****
  This report has two parameters:
    :CONTRIBUTION_YEAR - the year to evaluate contributions for (i.e. 2026 for contributions made in 2026)
    :WITHIN_AMOUNT - an amount to identify employees who are within X dollars of exceeding the pre-tax limit 
                    (i.e. 500 would identify anyone exceeding the limit or within $500 of exceeding the limit)
    
***** COPYRIGHT *****  
See LICENSE in the Github repository for copyright.

*/

WITH LIMITS_AND_WAGES AS -- ESTABLISH NORMAL CONTRIBUTION LIMITS AND PRIOR YEAR FICA THRESHOLD FOR HIGH EARNER STATUS 
    -- IDEALLY THIS WOULD BE A TABLE INSTEAD OF A CTE
    (
      SELECT '2026' LW_CONTRIBUTION_YEAR, 24500 NL_MAIN, 24500 NL_457B, 145000 PY_WAGE_THRESHOLD FROM DUAL UNION ALL
      SELECT '2025' LW_CONTRIBUTION_YEAR, 23500 NL_MAIN, 23500 NL_457B, 145000 PY_WAGE_THRESHOLD FROM DUAL UNION ALL
      SELECT '2024' LW_CONTRIBUTION_YEAR, 23000 NL_MAIN, 23000 NL_457B, 145000 PY_WAGE_THRESHOLD FROM DUAL UNION ALL
      SELECT '2023' LW_CONTRIBUTION_YEAR, 22500 NL_MAIN, 22500 NL_457B, 145000 PY_WAGE_THRESHOLD FROM DUAL

      -- IF YOU DO NOT PLAN TO MAINTAIN THIS CTE, YOU COULD PULL THE LIMITS FROM PTRBDCL INSTEAD. FOR EXAMPLE:
      /*
      SELECT :CONTRIBUTION_YEAR LW_CONTRIBUTION_YEAR
      , (SELECT PTRBDCL_EMPL_LIMIT NL_MAIN FROM PTRBDCL WHERE PTRBDCL_CODE = 'NORMAL_LIMIT_CODE_MAIN') NL_MAIN
      , (SELECT PTRBDCL_EMPL_LIMIT NL_457 FROM PTRBDCL WHERE PTRBDCL_CODE = 'NORMAL_LIMIT_CODE_457') NL_457B
      , 145000 PY_WAGE_THRESHOLD FROM DUAL
      */
    )

, SPECIAL_CATCHUP AS -- IN LIEU OF A TABLE, ADD THE SPECIAL CATCHUP (ONLY) AMOUNTS FOR MAIN (403B) AND 457B SPECIAL CATCHUP CONTRIBUTIONS (OR JUST BE AWARE OF THEM WHEN REVIEWING THE REPORT)
  -- RECORDS HERE ARE OPTIONAL. PROBABLY ONLY ADD RECORDS HERE IF YOU'VE IDENTIFIED AN EMPLOYEE WHO IS A HIGH EARNER AND IS ELIGIBLE FOR SPECIAL CATCHUP CONTRIBUTIONS AND YOU'VE CALCULATED THE AMOUNTS.
  -- IDEALLY THIS WOULD BE A TABLE MANAGED IN BANNER ADMIN INSTEAD OF A CTE
  -- CAUTION MUST BE USED IF AN EMPLOYEE IS ELIGIBLE TO CONTRIBUTE TO BOTH A 401K AND 403B AS THE SPECIAL CATCHUP ONLY APPLIES TO THE 403B.
  -- YOU SHOULD CHECK WITH YOUR LEGAL/COMPLIANCE TEAM, BUT MY ASSUMPTION IS THAT AS LONG AS THE 403B CONTRIBUTIONS FOR THE YEAR MEETS OR EXCEEDS THE SPECIAL CATCHUP AMOUNT IT SHOULD BE OK.
  (
    SELECT '2025' SC_YEAR, 2 SC_PIDM, 'A00111222' SC_ID, 3000 SC_MAIN, 0 SC_457B FROM DUAL UNION ALL
    SELECT '2025' SC_YEAR, 3 SC_PIDM, 'A00111333' SC_ID, 1548 SC_MAIN, 23500 SC_457B FROM DUAL
  )

, PRET_MAIN AS -- SUPPLY A FIRST BUCKET OF PRE-TAX CODES
    (
      -- MAIN BUCKET - PRE-TAX
      -- SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('BDCA_LIST_PRET_MAIN')
      SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('504','507','508','518','531','536','541','551','553','555','556','557','558','559','563','564','651','653','655','656','657','658','659','663','664','670','682')
    )
    
, POST_MAIN AS -- SUPPLY A FIRST BUCKET OF POST-TAX CODES
  (
    -- MAIN BUCKET - POST-TAX
    -- SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('BDCA_LIST_POST_MAIN')
    SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('565','566','567','568','570','665','666','667','668')
  )

, PRET_457B AS -- SUPPLY A SECOND BUCKET OF PRE-TAX CODES IF APPLICABLE
  (
    -- 457B BUCKET - PRE-TAX
    -- SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('BDCA_LIST_PRET_457B')
    SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('552','554','560','561','562','569','652','654','660','661','662','669')
  )

, POST_457B AS -- SUPPLY A SECOND BUCKET OF POST-TAX CODES IF APPLICABLE
  (
    -- 457B BUCKET - POST-TAX
    -- SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('BDCA_LIST_POST_457B')
    SELECT PTRBDCA_CODE FROM PTRBDCA WHERE PTRBDCA_CODE IN ('571','572','671','672')
  )

, HIGH_EARNERS_50_PLUS AS  -- QUERY FOR HIGH_EARNERS_50_PLUS. COULD USE BANNER FICA WAGES OR CREATE YOUR OWN LIST OF PIDMS AND INFO
  (
    SELECT 
      COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR) + 1 HE_CONTRIBUTION_YEAR
    , PHRDEDN_PIDM EE_PIDM
    , SPRIDEN_ID EE_ID
    , LW.NL_MAIN
    , LW.NL_457B
    , LW.LW_CONTRIBUTION_YEAR - EXTRACT(YEAR FROM SPBPERS_BIRTH_DATE) EE_TAX_AGE
    , LW.PY_WAGE_THRESHOLD
    , SUM(PHRDEDN_APPLICABLE_GROSS) PRIOR_YEAR_FICA_RET_WAGES
    FROM PHRDEDN 
      -- ADDED JOIN TO PHRHIST, TO USE THE POSTING OVERRIDE DATE AS THE DATE TO DETERMINE THE YEAR OF THE CONTRIBUTION. 
      -- THIS IS BECAUSE THE POSTING OVERRIDE DATE IS USED TO DETERMINE WHICH MONTH THE CONTRIBUTION APPLIES TO FOR W-2S (PERDTOT).
      -- COALESCE HANDLES CASES WHERE POSTING OVERRIDE DATE IS NULL (MOST RECORDS).
      JOIN PHRHIST 
        ON PHRHIST_PIDM = PHRDEDN_PIDM 
          AND PHRHIST_YEAR = PHRDEDN_YEAR 
          AND PHRHIST_PICT_CODE = PHRDEDN_PICT_CODE 
          AND PHRHIST_PAYNO = PHRDEDN_PAYNO 
          AND PHRHIST_SEQ_NO = PHRDEDN_SEQ_NO
      JOIN SPBPERS ON SPBPERS_PIDM = PHRDEDN_PIDM
      JOIN SPRIDEN ON SPRIDEN_PIDM = PHRDEDN_PIDM AND SPRIDEN_CHANGE_IND IS NULL
      -- JOIN LIMITS_AND_WAGES LW ON LW.LW_CONTRIBUTION_YEAR = PHRDEDN_YEAR + 1
      -- JOIN WRITTEN INTENTIONALLY TO USE THE MOST RECENT YEAR IF THE ACTUAL YEAR IS NOT YET IN THE CTE ABOVE.
      -- WE'D RATHER  HAVE RECORDS SHOW UP TO BE INVESTIGATED, THAN TO THINK NOBODY HAS EXCEEDED THE LIMITS BECAUSE OF A MISSING RECORD.
      JOIN LIMITS_AND_WAGES LW ON LW.LW_CONTRIBUTION_YEAR = 
        ( SELECT MAX(JR.LW_CONTRIBUTION_YEAR)
          FROM LIMITS_AND_WAGES JR
          WHERE JR.LW_CONTRIBUTION_YEAR <= COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR) + 1
        )
    WHERE PHRDEDN_BDCA_CODE IN 
      ( SELECT PTRBDCA_CODE 
        FROM PTRBDCA
        WHERE PTRBDCA_BDTY_CODE = '02'  -- FICA TAX - RETIREMENT TYPE
      )
      
      -- AGE 50 OR OLDER AT END OF YEAR
      AND LW.LW_CONTRIBUTION_YEAR - EXTRACT(YEAR FROM SPBPERS_BIRTH_DATE) >= 50 

    GROUP BY COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR)
    , PHRDEDN_PIDM
    , SPRIDEN_ID
    , LW.PY_WAGE_THRESHOLD
    , LW.NL_MAIN
    , LW.NL_457B
    , LW.LW_CONTRIBUTION_YEAR - EXTRACT(YEAR FROM SPBPERS_BIRTH_DATE)
    HAVING SUM(PHRDEDN_APPLICABLE_GROSS) >= LW.PY_WAGE_THRESHOLD  -- HIGH EARNER THRESHOLD
  )

, CONTRIBUTIONS AS -- QUERY FOR ALL EMPLOYEE CONTRIBUTION AMOUNTS IN ALL BUCKETS FOR THE CURRENT YEAR
  (
    SELECT 
      -- COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR) POSTING_YEAR
      -- PHRDEDN_YEAR
      COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR) POSTING_YEAR
    , PHRDEDN_PIDM
    , PHRDEDN_BDCA_CODE
    , SUM(PHRDEDN_EMPLOYEE_AMT) TOTAL_EE_CONTRIBUTIONS
    FROM PHRDEDN
      -- ADDED JOIN TO PHRHIST, TO USE THE POSTING OVERRIDE DATE AS THE DATE TO DETERMINE THE YEAR OF THE CONTRIBUTION. THIS IS BECAUSE THE POSTING OVERRIDE DATE IS USED TO DETERMINE WHICH MONTH THE CONTRIBUTION APPLIES TO FOR PERDTOT OR MORE IMPORTANTLY W-2S.
      -- COALESCE HANDLES CASES WHERE POSTING OVERRIDE DATE IS NULL (MOST RECORDS).
      JOIN PHRHIST 
        ON PHRHIST_PIDM = PHRDEDN_PIDM 
          AND PHRHIST_YEAR = PHRDEDN_YEAR 
          AND PHRHIST_PICT_CODE = PHRDEDN_PICT_CODE 
          AND PHRHIST_PAYNO = PHRDEDN_PAYNO 
          AND PHRHIST_SEQ_NO = PHRDEDN_SEQ_NO
    WHERE PHRDEDN_BDCA_CODE IN 
      ( SELECT PTRBDCA_CODE FROM PRET_MAIN UNION ALL 
        SELECT PTRBDCA_CODE FROM POST_MAIN UNION ALL 
        SELECT PTRBDCA_CODE FROM PRET_457B UNION ALL 
        SELECT PTRBDCA_CODE FROM POST_457B
      )
      -- -- ***** PARAMETER: THIS IS WHERE THE YEAR GETS FILTERED ***** -- --
      AND COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR) = TO_CHAR(:CONTRIBUTION_YEAR) -- TO_CHAR(SYSDATE + 5, 'YYYY')
    GROUP BY 
      -- PHRDEDN_YEAR
      -- -- 2025-10-24: I COULDN'T GET THIS WORKING, IT WAS RETURNING 0 RECORDS.
      COALESCE(TO_CHAR(PHRHIST_POSTING_OVERRIDE_DATE, 'YYYY'), PHRDEDN_YEAR)
    , PHRDEDN_PIDM
    , PHRDEDN_BDCA_CODE
  )

SELECT HE.HE_CONTRIBUTION_YEAR CONTRIBUTION_YEAR, C.POSTING_YEAR, HE.EE_PIDM, HE.EE_ID, HE.PRIOR_YEAR_FICA_RET_WAGES PY_SS_WAGES, HE.EE_TAX_AGE
, HE.NL_MAIN
, SC.SC_MAIN SPECIAL_CATCHUP_MAIN
, HE.NL_MAIN + COALESCE(SC.SC_MAIN,0) AS PRET_ALLOWED_MAIN
-- The next two columns show REMAINING and EXCESS amounts for pre-tax contributions in the MAIN bucket.
-- You could use only one or both depending on your preference.
, (HE.NL_MAIN + COALESCE(SC.SC_MAIN,0)) - SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) REMAINING_PRETAX_MAIN
-- COULD REMOVE GREATEST(...,0) IF YOU WANT TO SEE NEGATIVE VALUES WHERE EMPLOYEE IS APPORACHING THE LIMIT
, GREATEST(SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) - (HE.NL_MAIN + COALESCE(SC.SC_MAIN,0)),0) EXCESS_PRETAX_MAIN
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS PRET_MAIN_TOTAL
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM POST_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS POST_MAIN_TOTAL
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_MAIN UNION SELECT PTRBDCA_CODE FROM POST_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS TOTAL_MAIN
, HE.NL_457B
, SC.SC_457B SPECIAL_CATCHUP_457B
, HE.NL_457B + COALESCE(SC.SC_457B,0) AS PRET_ALLOWED_457B
-- The next two columns show REMAINING and EXCESS amounts for pre-tax contributions in the 457B bucket.
-- You could use only one or both depending on your preference.
, (HE.NL_457B + COALESCE(SC.SC_457B,0)) - SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) REMAINING_PRETAX_457B
-- COULD REMOVE GREATEST(...,0) IF YOU WANT TO SEE NEGATIVE VALUES WHERE EMPLOYEE IS APPORACHING THE LIMIT
, GREATEST(SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) - (HE.NL_457B + COALESCE(SC.SC_457B,0)),0) EXCESS_PRETAX_457B
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS PRET_457B_TOTAL
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM POST_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS POST_457B_TOTAL
, SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_457B UNION SELECT PTRBDCA_CODE FROM POST_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) AS TOTAL_457B
FROM HIGH_EARNERS_50_PLUS HE
JOIN CONTRIBUTIONS C 
  ON  HE.EE_PIDM = C.PHRDEDN_PIDM
  AND HE.HE_CONTRIBUTION_YEAR = C.POSTING_YEAR
LEFT JOIN SPECIAL_CATCHUP SC
  ON HE.EE_PIDM = SC.SC_PIDM
  AND C.POSTING_YEAR = SC.SC_YEAR
GROUP BY HE.HE_CONTRIBUTION_YEAR, C.POSTING_YEAR, HE.EE_PIDM, HE.EE_ID, HE.PRIOR_YEAR_FICA_RET_WAGES, HE.EE_TAX_AGE, HE.NL_MAIN, HE.NL_457B, SC.SC_MAIN, SC.SC_457B
-- HAVING: ONLY SHOW IF AN EMPLOYEE'S TOTAL PRE-TAX CONTRIBUTIONS (IN EITHER BUCKET) EXCEED THE NORMAL LIMIT
-- -- ***** PARAMETER: THE FOLLOWING TWO LINES USE THE :WITHIN_AMOUNT PARAMETER TO ALLOW PAYROLL TO SEE ANYONE APPROACHING THE PRETAX MAX ***** -- --
HAVING ( SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_MAIN) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) > (HE.NL_MAIN + COALESCE(SC.SC_MAIN,0) - COALESCE(TO_NUMBER(:WITHIN_AMOUNT),0))
      OR SUM (CASE WHEN C.PHRDEDN_BDCA_CODE IN (SELECT PTRBDCA_CODE FROM PRET_457B) THEN C.TOTAL_EE_CONTRIBUTIONS ELSE 0 END) > (HE.NL_457B + COALESCE(SC.SC_457B,0) - COALESCE(TO_NUMBER(:WITHIN_AMOUNT),0))
       )
;